# ðŸ”¥ VariÃ¡veis
COMPOSE=docker compose
APP=app
DB=postgres

# ðŸš€ Comandos principais
dev:
	$(COMPOSE) up

dev-d:
	$(COMPOSE) up -d

prod:
	$(COMPOSE) -f docker-compose.yml up --build

stop:
	$(COMPOSE) down

rebuild:
	$(COMPOSE) up --build --force-recreate

logs:
	$(COMPOSE) logs -f

app-logs:
	$(COMPOSE) logs -f $(APP)

db-logs:
	$(COMPOSE) logs -f $(DB)

shell:
	$(COMPOSE) exec $(APP) sh

db-shell:
	$(COMPOSE) exec $(DB) psql -U $$(grep POSTGRES_USER .env | cut -d '=' -f2) -d $$(grep POSTGRES_DB .env | cut -d '=' -f2)

reset-db:
	$(COMPOSE) down -v

# ðŸ§½ Limpeza geral
clean:
	$(COMPOSE) down -v --rmi all --remove-orphans

# ðŸ†˜ Ajuda
help:
	@echo ""
	@echo "Comandos disponÃ­veis:"
	@echo "  make dev         â†’ Sobe ambiente de desenvolvimento (com hot reload)"
	@echo "  make dev-d       â†’ Sobe ambiente de desenvolvimento sem logs (com hot reload)"
	@echo "  make prod        â†’ Sobe ambiente de produÃ§Ã£o"
	@echo "  make stop        â†’ Derruba os containers"
	@echo "  make rebuild     â†’ Derruba e sobe novamente com build forÃ§ado"
	@echo "  make logs        â†’ Logs de todos os serviÃ§os"
	@echo "  make app-logs    â†’ Logs apenas do Spring Boot"
	@echo "  make db-logs     â†’ Logs apenas do PostgreSQL"
	@echo "  make shell       â†’ Entra no container da aplicaÃ§Ã£o"
	@echo "  make db-shell    â†’ Acessa o banco PostgreSQL via psql"
	@echo "  make reset-db    â†’ Derruba e remove volume do banco (reset total)"
	@echo "  make clean       â†’ Limpa tudo: containers, volumes, imagens e orfÃ£os"
	@echo "  make help        â†’ Mostra essa ajuda"
	@echo ""
